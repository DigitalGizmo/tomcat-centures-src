package museum.history.deerfield.centuries.database.om;

import java.lang.reflect.Array;
import java.util.Vector;
import org.apache.torque.util.Criteria;
import org.apache.torque.TorqueException;
import museum.history.deerfield.centuries.util.VectorUtil;
import museum.history.deerfield.centuries.database.om.HistoricalEraLabel;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Tue Nov 04 10:27:06 EST 2003]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class HistoricalEraLabelPeer extends BaseHistoricalEraLabelPeer {
  
  private static Vector allHistoricalEraLabels_ = null;

  /**
   * Returns a Vector of HistoricalEraLabels for an array of eraIDs.
   * If eraIDs array is empty, returns an empty Vector.
   */
  public static Vector getHistoricalEraLabels( int[] eraIDs ) {
    Vector selectedEraLabels = new Vector();
    Vector allEraLabels      = getHistoricalEraLabels();
    int    numOfSelectedEras = Array.getLength( eraIDs );
    
    // HACK ALERT:  This implementation depends upon the eraIDs in the database
    // table being sequential, non-negative numbers, starting at zero.
    for (int i=0; i<numOfSelectedEras; i++) {
    	int eraID = eraIDs[i];
    	selectedEraLabels.add( (HistoricalEraLabel) allEraLabels.get( eraID ) );
    }
    return (selectedEraLabels);
  }

  /**
   * Returns a Vector of all HistoricalEraLabels.
   */
  public static Vector getHistoricalEraLabels() {

    if (allHistoricalEraLabels_ == null) {
      allHistoricalEraLabels_ = new Vector();
      
      try {
        Criteria criteria = new Criteria();
        criteria.addAscendingOrderByColumn( ERAID );    
        VectorUtil.listToVector( doSelect( criteria ), allHistoricalEraLabels_ );
          
      } catch (TorqueException e) {
        System.err.println( "HistoricalEraLabelPeer getHistoricalEraLabels:  Torque exception thrown." );
      }
    }
    return (allHistoricalEraLabels_);
  }
}
