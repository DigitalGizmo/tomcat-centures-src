package museum.history.deerfield.centuries.database.om;

import java.lang.reflect.Array;
import java.util.Vector;
import org.apache.torque.util.Criteria;
import org.apache.torque.TorqueException;
import museum.history.deerfield.centuries.util.VectorUtil;
import museum.history.deerfield.centuries.database.om.GradeLevelLabel;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Tue Nov 04 08:46:13 EST 2003]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class GradeLevelLabelPeer extends BaseGradeLevelLabelPeer {

  // Stores a cache of the grade level label objects, so we don't have to hit the database repeatedly.
  private static Vector allGradeLevelLabels_ = null;


  /**
   * Returns a Vector of GradeLevelLabels for an array of levelIDs.
   * If levelIDs array is empty, returns an empty Vector.
   */
  public static Vector getGradeLevelLabels( int[] levelIDs ) {
    Vector selectedLevelLabels = new Vector();
    Vector allLevelLabels      = getGradeLevelLabels();
    int    numSelectedLevels   = Array.getLength( levelIDs );
    
    // HACK ALERT:  This implementation depends upon the levelIDs in the database
    // table being sequential, non-negative numbers, starting at zero.
    for (int i=0; i<numSelectedLevels; i++) {
    	int levelID = levelIDs[i];
    	selectedLevelLabels.add( (GradeLevelLabel) allLevelLabels.get( levelID ) );
    }
    return (selectedLevelLabels);
  }


  /**
   * Returns a Vector of all GradeLevelLabels.
   */
  public static Vector getGradeLevelLabels() {

    if (allGradeLevelLabels_ == null) {
      allGradeLevelLabels_ = new Vector();

      try {
        Criteria criteria = new Criteria();
        criteria.addAscendingOrderByColumn( LEVELID );
        VectorUtil.listToVector( doSelect( criteria ), allGradeLevelLabels_ );

      } catch (TorqueException e) {
        System.err.println( "GradeLevelLabelPeer getGradeLevelLabels:  Torque exception thrown." );
      }
    }

    return (allGradeLevelLabels_);
  }
}
